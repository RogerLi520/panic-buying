<?xml version="1.0" encoding="UTF-8"?>
<!-- 设置log4j2的自身log级别为warn -->
<!-- 日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!-- Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，
    当设置成trace时，你会看到log4j2内部各种详细输出 -->
<!-- monitorInterval：Log4j能够自动检测修改配置文件和重新配置，这个参数即用来设置间隔自动检测的秒数 -->
<configuration status="warn" monitorInterval="30">

    <!-- 日志文件目录 -->
    <properties>
        <property name="FILE_NAME"></property>
        <property name="LOG_HOME">/usr/local/src/test_log_java</property>
        <property name="PROJECT_NAME"></property>
    </properties>

    <!-- 定义所有的appender -->
    <appenders>
        <!-- 控制台输出的配置 -->
        <console name="Console" target="SYSTEM_OUT">
            <!-- 线上控制台只输出info级别的日志 -->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <!-- 输出日志的格式 -->
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5level] [%t] - %l - %m%n"/>
        </console>

        <RollingFile name="RollingFileAll" fileName="${LOG_HOME}/${FILE_NAME}/${PROJECT_NAME}.log"
                     filePattern="${LOG_HOME}/${FILE_NAME}/$${date:yyyy-MM}/${PROJECT_NAME}-%d{yyyy-MM-dd}-%i.log.gz">
            <ThresholdFilter level="DEBUG"/>
            <PatternLayout pattern="[%d{yyyy-MM-dd HH:mm:ss:SSS}] [%-5level] [%t] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="100 MB"/>
            </Policies>
            <!-- 每个文件夹下最多存放30个文件，自动清除超过30没有修改的文件 -->
            <DefaultRolloverStrategy max="30">
                <Delete basePath="${LOG_HOME}/${FILE_NAME}/$${date:yyyy-MM}/" maxDepth="1">
                    <IfFileName glob="*.log" />
                    <!--!Note: 这里的age必须和filePattern协调, 后者是精确到HH, 这里就要写成xH, xd就不起作用
                    另外, 数字最好>2, 否则可能造成删除的时候, 最近的文件还处于被占用状态,导致删除不成功!-->
                    <!--7天-->
                    <IfLastModified age="30d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

    </appenders>
    <!-- 然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
    <loggers>
        <!-- 过滤掉spring和mybatis的一些无用的debug信息 -->
        <logger name="org.springframework" level="INFO">
        </logger>
        <logger name="org.mybatis" level="INFO">
        </logger>
        <root level="all">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileAll"/>
        </root>
    </loggers>

</configuration>